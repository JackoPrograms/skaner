### Часть программы (вызывается из Часть скрипта 3): записывает в отдельную таблицу ip и найденные для них открытые порты
# ----------------------------------------------------------------------------

import sqlite3



# Считываем имя рабочей папки
with open('name_folder.txt', 'r') as file:
    name_folder = file.read()
    name_folder = name_folder.strip("\n")
# Имя пути до файла с БД
path_file = f"./{name_folder}/inf/scan_results.db"


def create_database():
    # Создание базы данных SQLite и таблиц
    conn = sqlite3.connect(path_file)
    c = conn.cursor()

    c.execute('''CREATE TABLE IF NOT EXISTS vulnerability
                 (id INTEGER PRIMARY KEY, type TEXT, protocol TEXT, severity TEXT, target TEXT, details TEXT)''')
    
    conn.commit()
    conn.close()
    
def insert_data(data):
    # Вставка данных в таблицы базы данных
    conn = sqlite3.connect(path_file)
    c = conn.cursor()
    for d in data:
        c.execute("INSERT INTO vulnerability (type, protocol, severity, target, details) VALUES (?, ?, ?, ?, ?)",
                  (d['type'], d['protocol'], d['severity'], d['target'], d['details']))
    conn.commit()
    conn.close()

def parse_data(file_path):
    # Парсинг вывода nmap для извлечения информации
    data = []
    with open(file_path, 'r') as file:
        for line in file:
            if line[-1] == "\n":
                parts = line[:-1]
            parts = parts.split(' ')
            if len(parts) >= 4:
                if len(parts) == 4:
                    data.append({
                        'type': parts[0].strip('[]'),
                        'protocol': parts[1].strip('[]'),
                        'severity': parts[2].strip('[]'),
                        'target': parts[3].split(' ')[0].strip('[]'),
                        'details': ''
                    })
                elif len(parts) > 4:
                    data.append({
                        'type': parts[0].strip('[]'),
                        'protocol': parts[1].strip('[]'),
                        'severity': parts[2].strip('[]'),
                        'target': parts[3].split(' ')[0].strip('[]'),
                        'details': parts[4]
                    })
    return data

# Пример использования:
file_path = f"./{name_folder}/inf/nuclei_out.txt"
data = parse_data(file_path)
create_database()
insert_data(data)


print(f"[ + ] Произведена запись в БД полученой информации от nuclei для всех открытых портов на найденных ip")
